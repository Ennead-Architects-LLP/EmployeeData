name: Build AboutMe App

# This workflow builds two Windows executables for the AboutMe tool:
# 1) AboutMe_ComputerInfo.exe (GUI):
#    - For general users. Shows a dark-themed GUI to review and approve sharing.
#    - Built as a windowed app (no console window) using --noconsole.
# 2) AboutMe_ComputerInfo_Silent.exe (Forced Silent for IT):
#    - For IT automation. Runs completely silent with NO UI and NO console.
#    - Uses the about_me_silent.py launcher which forces ABOUTME_FORCE_SILENT=1.
#    - Also built with --noconsole to ensure absolutely no window appears.
# Place both EXEs in docs/assets/download for easy distribution.

on:
  push:
    branches:
      - main
    paths:
      - '3-aboutme/**'
      - '.github/workflows/build-aboutme.yml'
  pull_request:
    paths:
      - '3-aboutme/**'
      - '.github/workflows/build-aboutme.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows-exe:
    name: Build Windows EXE
    runs-on: windows-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install build dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path '3-aboutme/requirements_about_me.txt') {
            python -m pip install -r 3-aboutme/requirements_about_me.txt
          } else {
            python -m pip install pyinstaller requests psutil wmi pywin32 Pillow
          }

      - name: Build EXEs with PyInstaller (GUI and Silent)
        shell: pwsh
        run: |
          Set-Location 3-aboutme
          $icon = Test-Path 'icon.ico'
          if (-Not (Test-Path 'assets')) { New-Item -ItemType Directory -Path 'assets' | Out-Null }
          # Copy actual gif into assets for PyInstaller data bundling
          if (Test-Path 'duck-dance.gif') { Copy-Item 'duck-dance.gif' 'assets/duck-dance.gif' -Force }
          if ($icon) {
            # GUI build (windowed): --noconsole prevents any console window
            pyinstaller --noconfirm --clean --onefile --noconsole --name AboutMe_ComputerInfo --icon icon.ico --add-data "assets\\duck-dance.gif;assets" about_me.py
            # Silent IT build (forced silent + windowed): --noconsole ensures no window at all
            pyinstaller --noconfirm --clean --onefile --noconsole --name AboutMe_ComputerInfo_Silent --icon icon.ico --add-data "assets\\duck-dance.gif;assets" about_me_silent.py
          } else {
            pyinstaller --noconfirm --clean --onefile --noconsole --name AboutMe_ComputerInfo --add-data "assets\\duck-dance.gif;assets" about_me.py
            pyinstaller --noconfirm --clean --onefile --noconsole --name AboutMe_ComputerInfo_Silent --add-data "assets\\duck-dance.gif;assets" about_me_silent.py
          }

      - name: Upload EXE artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AboutMe_ComputerInfo-exes
          path: |
            3-aboutme/dist/AboutMe_ComputerInfo.exe
            3-aboutme/dist/AboutMe_ComputerInfo_Silent.exe
          if-no-files-found: error

      - name: Copy EXEs to docs download folder
        if: ${{ always() }}
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path docs/assets | Out-Null
          New-Item -ItemType Directory -Force -Path docs/assets/download | Out-Null
          Copy-Item 3-aboutme/dist/AboutMe_ComputerInfo.exe docs/assets/download/AboutMe_ComputerInfo.exe -Force
          Copy-Item 3-aboutme/dist/AboutMe_ComputerInfo_Silent.exe docs/assets/download/AboutMe_ComputerInfo_Silent.exe -Force

      - name: Commit updated EXEs to repository
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/assets/download/AboutMe_ComputerInfo.exe docs/assets/download/AboutMe_ComputerInfo_Silent.exe
          if (git diff --cached --quiet) {
            Write-Output "No changes to commit."
          } else {
            git commit -m "%%%_Action_Rebuild AboutMe_ComputerInfo.exe"
            git pull --rebase
            git push
          }


